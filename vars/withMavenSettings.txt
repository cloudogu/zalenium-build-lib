provides more sophisticated Maven support for custom `settings.xml` files which refer central maven mirror to in the
context of a Cloudogu EcoSystem. This global variable writes custom `settings.xml` files and can additionally invoke a
provided or custom Maven call.

Any `settings.xml` being writting will be removed once the settings body is left.

Once written, the `settings.xml`'s structure will look like this:

|
+->settings
|   +-> localRepository
|   `-> servers
|        `-> server
|             +-> id
|             +-> username
|             `-> password
|
`-> mirrors
     `-> mirror
          +-> id (reference to the server id)
          +-> name
          +-> url
          +-> mirrorOf (fixed value of central maven mirror)

Example call:

nexusCreds = usernamePassword(credentialsId: 'jenkinsNexusServiceUser', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')
withMavenSettings.mvnWithSettings(nexusCreds, 'cesinstance.stage.host.tld', '/usr/share/maven') { settingsXml ->
    // do something with the settings.xml here
} // settings.xml will be removed automatically

Example call with included Maven call:

withMavenSettings.mvnWithSettings(nexusCreds, 'cesinstance.stage.host.tld', 'yourMavenGoal')

- settings(def nexusCredentials, String cesFQDN, String pathToLocalMavenRepository, Closure closure) -  Writes a
  `settings.xml` file with the given Nexus credentials and executes the closure body. This method provides a parameter
  `settingsXml` which contains the relative file path to the 'settings.xml' file.

- mvn(String settingsXml, String mvnCallArgs) - call the Jenkins Tool Maven with a provided `settings.xml`

- mvnWithSettings(def nexusCredentials, String cesFQDN, String mvnCallArgs) - call Jenkins Tool Maven wrapped within a
  settings file. This is basically a convenience mix of `settings` and `mvn`

- customMvnWithSettings(def nexusCredentials, String cesFQDN, String mvnHome, String pathToLocalMavenRepository, String mvnCallArgs) -
  similar to `mvnWithSettings` but calls a custom Maven installation instead. It is necessary to know about the location of
  the Maven installation. Calling this method can make sense if the Maven installation resides in a Docker container.